# Generated by Django 4.2.16 on 2024-10-24 00:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('company_candidate_id', models.IntegerField(verbose_name='企業内候補者')),
                ('id_in_media', models.CharField(blank=True, default='', max_length=255, verbose_name='採用媒体内ID')),
                ('last_name', models.CharField(blank=True, default='', max_length=255, verbose_name='姓')),
                ('first_name', models.CharField(blank=True, default='', max_length=255, verbose_name='名')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男性'), (2, '女性'), (99, '未選択')], null=True, verbose_name='性別')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='年齢')),
                ('prefecture', models.SmallIntegerField(blank=True, choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県'), (99, '海外')], null=True, verbose_name='居住地（都道府県）')),
                ('industry', models.SmallIntegerField(blank=True, choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], null=True, verbose_name='業種')),
                ('occupation', models.SmallIntegerField(blank=True, choices=[(1, '経営'), (2, '管理'), (3, 'マーケティング'), (4, '営業'), (5, 'コンサルタント'), (6, 'ITコンサルタント'), (7, '専門職'), (8, 'IT技術職'), (9, 'ゲーム'), (10, '電気・電子'), (11, '半導体'), (12, '機械'), (13, '化学'), (14, '金融'), (15, '研究・臨床開発・治験'), (16, '建築・土木'), (17, '人事'), (18, 'サービス'), (19, 'プロジェクト管理'), (20, 'Webサービス・制作'), (21, 'デジタルマーケティング'), (22, '広告'), (23, '新聞・出版'), (24, 'テレビ・放送・映像・音響'), (25, 'デザイン'), (26, '素材'), (27, '食品'), (28, '化粧品'), (29, '日用品'), (30, '不動産'), (31, '施工管理'), (32, '医療営業'), (33, '生産管理・品質管理・品質保証'), (34, '学術・PMS・薬事'), (35, '医療・看護・薬剤'), (99, '不明')], null=True, verbose_name='職種')),
                ('position', models.SmallIntegerField(blank=True, choices=[(1, '経営者'), (2, '役員'), (3, '部長'), (4, '課長'), (5, '主任/係長'), (6, '一般社員')], null=True, verbose_name='役職')),
                ('current_company', models.CharField(blank=True, default='', max_length=255, verbose_name='企業名')),
                ('department', models.CharField(blank=True, default='', max_length=255, verbose_name='部署名')),
                ('job_title', models.CharField(blank=True, default='', max_length=255, verbose_name='役職名')),
                ('current_annual_income_min', models.IntegerField(blank=True, null=True, verbose_name='現年収の下限(万円)')),
                ('current_annual_income_max', models.IntegerField(blank=True, null=True, verbose_name='現年収の上限(万円)')),
                ('is_career_change', models.BooleanField(blank=True, null=True, verbose_name='キャリアチェンジ')),
                ('preferred_annual_income', models.IntegerField(blank=True, null=True, verbose_name='希望年収(万円)')),
            ],
            options={
                'verbose_name': '候補者',
                'verbose_name_plural': '候補者',
                'db_table': 'candidates',
            },
        ),
        migrations.CreateModel(
            name='CandidateAcademicHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('enrollment_date', models.DateField(blank=True, null=True, verbose_name='入学日')),
                ('graduation_date', models.DateField(blank=True, null=True, verbose_name='卒業日')),
                ('school', models.CharField(blank=True, max_length=255, verbose_name='学校')),
                ('department', models.CharField(blank=True, default='', max_length=255, verbose_name='学部・学科')),
            ],
            options={
                'verbose_name': '候補者の学歴',
                'verbose_name_plural': '候補者の学歴',
                'db_table': 'candidate_academic_histories',
            },
        ),
        migrations.CreateModel(
            name='CandidateCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('acquisition_date', models.DateField(blank=True, null=True, verbose_name='取得日')),
                ('certification', models.CharField(blank=True, default='', max_length=255, verbose_name='資格')),
            ],
            options={
                'verbose_name': '候補者の資格',
                'verbose_name_plural': '候補者の資格',
                'db_table': 'candidate_certifications',
            },
        ),
        migrations.CreateModel(
            name='CandidateFeeling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('emotion_type', models.SmallIntegerField(choices=[(1, '転職に対する期待'), (2, '現職に対する不満'), (3, '転職に対する不安')], verbose_name='感情タイプ')),
                ('feeling', models.CharField(max_length=255, verbose_name='転職に対する気持ち')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='無効')),
            ],
            options={
                'verbose_name': '転職に対する気持ち',
                'verbose_name_plural': '転職に対する気持ち',
                'db_table': 'candidate_feelings',
            },
        ),
        migrations.CreateModel(
            name='CandidateLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
            options={
                'verbose_name': '候補者-ラベル',
                'verbose_name_plural': '候補者-ラベル',
                'db_table': 'candidate_labels',
            },
        ),
        migrations.CreateModel(
            name='CandidatePreferredIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('industry', models.SmallIntegerField(choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], verbose_name='希望業種')),
            ],
            options={
                'verbose_name': '希望業種',
                'verbose_name_plural': '希望業種',
                'db_table': 'candidate_preferred_industries',
            },
        ),
        migrations.CreateModel(
            name='CandidatePreferredLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('location', models.SmallIntegerField(choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県'), (99, '海外')], verbose_name='希望勤務地')),
            ],
            options={
                'verbose_name': '希望勤務地',
                'verbose_name_plural': '希望勤務地',
                'db_table': 'candidate_preferred_locations',
            },
        ),
        migrations.CreateModel(
            name='CandidatePreferredOccupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('occupation', models.SmallIntegerField(choices=[(1, '経営'), (2, '管理'), (3, 'マーケティング'), (4, '営業'), (5, 'コンサルタント'), (6, 'ITコンサルタント'), (7, '専門職'), (8, 'IT技術職'), (9, 'ゲーム'), (10, '電気・電子'), (11, '半導体'), (12, '機械'), (13, '化学'), (14, '金融'), (15, '研究・臨床開発・治験'), (16, '建築・土木'), (17, '人事'), (18, 'サービス'), (19, 'プロジェクト管理'), (20, 'Webサービス・制作'), (21, 'デジタルマーケティング'), (22, '広告'), (23, '新聞・出版'), (24, 'テレビ・放送・映像・音響'), (25, 'デザイン'), (26, '素材'), (27, '食品'), (28, '化粧品'), (29, '日用品'), (30, '不動産'), (31, '施工管理'), (32, '医療営業'), (33, '生産管理・品質管理・品質保証'), (34, '学術・PMS・薬事'), (35, '医療・看護・薬剤'), (99, '不明')], verbose_name='希望職種')),
            ],
            options={
                'verbose_name': '希望職種',
                'verbose_name_plural': '希望職種',
                'db_table': 'candidate_preferred_occupations',
            },
        ),
        migrations.CreateModel(
            name='CandidateSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='期間')),
                ('skill', models.TextField(blank=True, default='', verbose_name='スキル')),
                ('detail', models.TextField(blank=True, default='', verbose_name='詳細')),
            ],
            options={
                'verbose_name': '候補者のスキル',
                'verbose_name_plural': '候補者のスキル',
                'db_table': 'candidate_skills',
            },
        ),
        migrations.CreateModel(
            name='CandidateWorkHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='開始日')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='終了日')),
                ('experience', models.TextField(blank=True, default='', verbose_name='経験')),
                ('detail', models.TextField(blank=True, default='', verbose_name='詳細')),
            ],
            options={
                'verbose_name': '候補者の職務経歴',
                'verbose_name_plural': '候補者の職務経歴',
                'db_table': 'candidate_work_histories',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('name', models.CharField(max_length=255, verbose_name='企業名')),
                ('plan', models.SmallIntegerField(blank=True, choices=[(1, 'Lite'), (2, 'Basic'), (3, 'Premium')], null=True, verbose_name='プラン')),
                ('fiscal_year_start_month', models.IntegerField(blank=True, null=True, verbose_name='会計年度開始月')),
                ('is_tutorial_completed', models.BooleanField(blank=True, default=False, verbose_name='チュートリアル完了')),
            ],
            options={
                'verbose_name': '企業',
                'verbose_name_plural': '企業',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('foundation_date', models.DateField(blank=True, null=True, verbose_name='設立日')),
                ('capital', models.IntegerField(blank=True, null=True, verbose_name='資本金(万円)')),
                ('post_code', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Invalid', regex='^[0-9]{7}$')], verbose_name='郵便番号')),
                ('address_prefecture', models.SmallIntegerField(blank=True, choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県'), (99, '海外')], null=True, verbose_name='所在地(都道府県)')),
                ('address_other', models.CharField(blank=True, default='', max_length=255, verbose_name='所在地(県以下)')),
                ('ceo_name', models.CharField(blank=True, default='', max_length=100, verbose_name='代表者名')),
                ('employee_size', models.SmallIntegerField(blank=True, choices=[(1, '10人以下'), (2, '10～99人'), (3, '100～999人'), (4, '1000人以上')], null=True, verbose_name='従業員数')),
                ('business_description', models.CharField(blank=True, default='', max_length=255, verbose_name='事業内容')),
                ('industry', models.SmallIntegerField(blank=True, choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], null=True, verbose_name='業種')),
                ('revenue', models.IntegerField(blank=True, null=True, verbose_name='売上高(万円)')),
                ('mission', models.TextField(blank=True, default='', verbose_name='ミッション')),
                ('vision', models.TextField(blank=True, default='', verbose_name='ビジョン')),
                ('value', models.TextField(blank=True, default='', verbose_name='バリュー')),
            ],
            options={
                'verbose_name': '会社概要',
                'verbose_name_plural': '会社概要',
                'db_table': 'company_info',
            },
        ),
        migrations.CreateModel(
            name='CompanyMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
            ],
            options={
                'verbose_name': '利用している採用媒体',
                'verbose_name_plural': '利用している採用媒体',
                'db_table': 'company_medias',
            },
        ),
        migrations.CreateModel(
            name='CompanyStrength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('strength', models.CharField(max_length=255, verbose_name='強み')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
            ],
            options={
                'verbose_name': '企業の強み',
                'verbose_name_plural': '企業の強み',
                'db_table': 'company_strengths',
            },
        ),
        migrations.CreateModel(
            name='CompanyStrengthJP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
            options={
                'verbose_name': '企業の強み-求人票',
                'verbose_name_plural': '企業の強み-求人票',
                'db_table': 'company_strength_jps',
            },
        ),
        migrations.CreateModel(
            name='CompanyStrengthRA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
            options={
                'verbose_name': '求める人物像-採用記事',
                'verbose_name_plural': '求める人物像-採用記事',
                'db_table': 'company_strength_ras',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCandidate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('company_candidate_id', models.IntegerField(verbose_name='企業内候補者')),
                ('id_in_media', models.CharField(blank=True, default='', max_length=255, verbose_name='採用媒体内ID')),
                ('last_name', models.CharField(blank=True, default='', max_length=255, verbose_name='姓')),
                ('first_name', models.CharField(blank=True, default='', max_length=255, verbose_name='名')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男性'), (2, '女性'), (99, '未選択')], null=True, verbose_name='性別')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='年齢')),
                ('prefecture', models.SmallIntegerField(blank=True, choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県'), (99, '海外')], null=True, verbose_name='居住地（都道府県）')),
                ('industry', models.SmallIntegerField(blank=True, choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], null=True, verbose_name='業種')),
                ('occupation', models.SmallIntegerField(blank=True, choices=[(1, '経営'), (2, '管理'), (3, 'マーケティング'), (4, '営業'), (5, 'コンサルタント'), (6, 'ITコンサルタント'), (7, '専門職'), (8, 'IT技術職'), (9, 'ゲーム'), (10, '電気・電子'), (11, '半導体'), (12, '機械'), (13, '化学'), (14, '金融'), (15, '研究・臨床開発・治験'), (16, '建築・土木'), (17, '人事'), (18, 'サービス'), (19, 'プロジェクト管理'), (20, 'Webサービス・制作'), (21, 'デジタルマーケティング'), (22, '広告'), (23, '新聞・出版'), (24, 'テレビ・放送・映像・音響'), (25, 'デザイン'), (26, '素材'), (27, '食品'), (28, '化粧品'), (29, '日用品'), (30, '不動産'), (31, '施工管理'), (32, '医療営業'), (33, '生産管理・品質管理・品質保証'), (34, '学術・PMS・薬事'), (35, '医療・看護・薬剤'), (99, '不明')], null=True, verbose_name='職種')),
                ('position', models.SmallIntegerField(blank=True, choices=[(1, '経営者'), (2, '役員'), (3, '部長'), (4, '課長'), (5, '主任/係長'), (6, '一般社員')], null=True, verbose_name='役職')),
                ('current_company', models.CharField(blank=True, default='', max_length=255, verbose_name='企業名')),
                ('department', models.CharField(blank=True, default='', max_length=255, verbose_name='部署名')),
                ('job_title', models.CharField(blank=True, default='', max_length=255, verbose_name='役職名')),
                ('current_annual_income_min', models.IntegerField(blank=True, null=True, verbose_name='現年収の下限(万円)')),
                ('current_annual_income_max', models.IntegerField(blank=True, null=True, verbose_name='現年収の上限(万円)')),
                ('is_career_change', models.BooleanField(blank=True, null=True, verbose_name='キャリアチェンジ')),
                ('preferred_annual_income', models.IntegerField(blank=True, null=True, verbose_name='希望年収(万円)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 候補者',
                'verbose_name_plural': 'historical 候補者',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateAcademicHistory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('enrollment_date', models.DateField(blank=True, null=True, verbose_name='入学日')),
                ('graduation_date', models.DateField(blank=True, null=True, verbose_name='卒業日')),
                ('school', models.CharField(blank=True, max_length=255, verbose_name='学校')),
                ('department', models.CharField(blank=True, default='', max_length=255, verbose_name='学部・学科')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 候補者の学歴',
                'verbose_name_plural': 'historical 候補者の学歴',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateCertification',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('acquisition_date', models.DateField(blank=True, null=True, verbose_name='取得日')),
                ('certification', models.CharField(blank=True, default='', max_length=255, verbose_name='資格')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 候補者の資格',
                'verbose_name_plural': 'historical 候補者の資格',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateFeeling',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('emotion_type', models.SmallIntegerField(choices=[(1, '転職に対する期待'), (2, '現職に対する不満'), (3, '転職に対する不安')], verbose_name='感情タイプ')),
                ('feeling', models.CharField(max_length=255, verbose_name='転職に対する気持ち')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='無効')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 転職に対する気持ち',
                'verbose_name_plural': 'historical 転職に対する気持ち',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateLabel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 候補者-ラベル',
                'verbose_name_plural': 'historical 候補者-ラベル',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidatePreferredIndustry',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('industry', models.SmallIntegerField(choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], verbose_name='希望業種')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 希望業種',
                'verbose_name_plural': 'historical 希望業種',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidatePreferredLocation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('location', models.SmallIntegerField(choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県'), (99, '海外')], verbose_name='希望勤務地')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 希望勤務地',
                'verbose_name_plural': 'historical 希望勤務地',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidatePreferredOccupation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('occupation', models.SmallIntegerField(choices=[(1, '経営'), (2, '管理'), (3, 'マーケティング'), (4, '営業'), (5, 'コンサルタント'), (6, 'ITコンサルタント'), (7, '専門職'), (8, 'IT技術職'), (9, 'ゲーム'), (10, '電気・電子'), (11, '半導体'), (12, '機械'), (13, '化学'), (14, '金融'), (15, '研究・臨床開発・治験'), (16, '建築・土木'), (17, '人事'), (18, 'サービス'), (19, 'プロジェクト管理'), (20, 'Webサービス・制作'), (21, 'デジタルマーケティング'), (22, '広告'), (23, '新聞・出版'), (24, 'テレビ・放送・映像・音響'), (25, 'デザイン'), (26, '素材'), (27, '食品'), (28, '化粧品'), (29, '日用品'), (30, '不動産'), (31, '施工管理'), (32, '医療営業'), (33, '生産管理・品質管理・品質保証'), (34, '学術・PMS・薬事'), (35, '医療・看護・薬剤'), (99, '不明')], verbose_name='希望職種')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 希望職種',
                'verbose_name_plural': 'historical 希望職種',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateSkill',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='期間')),
                ('skill', models.TextField(blank=True, default='', verbose_name='スキル')),
                ('detail', models.TextField(blank=True, default='', verbose_name='詳細')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 候補者のスキル',
                'verbose_name_plural': 'historical 候補者のスキル',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateWorkHistory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='開始日')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='終了日')),
                ('experience', models.TextField(blank=True, default='', verbose_name='経験')),
                ('detail', models.TextField(blank=True, default='', verbose_name='詳細')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 候補者の職務経歴',
                'verbose_name_plural': 'historical 候補者の職務経歴',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompany',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('name', models.CharField(max_length=255, verbose_name='企業名')),
                ('plan', models.SmallIntegerField(blank=True, choices=[(1, 'Lite'), (2, 'Basic'), (3, 'Premium')], null=True, verbose_name='プラン')),
                ('fiscal_year_start_month', models.IntegerField(blank=True, null=True, verbose_name='会計年度開始月')),
                ('is_tutorial_completed', models.BooleanField(blank=True, default=False, verbose_name='チュートリアル完了')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 企業',
                'verbose_name_plural': 'historical 企業',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompanyInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('foundation_date', models.DateField(blank=True, null=True, verbose_name='設立日')),
                ('capital', models.IntegerField(blank=True, null=True, verbose_name='資本金(万円)')),
                ('post_code', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Invalid', regex='^[0-9]{7}$')], verbose_name='郵便番号')),
                ('address_prefecture', models.SmallIntegerField(blank=True, choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県'), (99, '海外')], null=True, verbose_name='所在地(都道府県)')),
                ('address_other', models.CharField(blank=True, default='', max_length=255, verbose_name='所在地(県以下)')),
                ('ceo_name', models.CharField(blank=True, default='', max_length=100, verbose_name='代表者名')),
                ('employee_size', models.SmallIntegerField(blank=True, choices=[(1, '10人以下'), (2, '10～99人'), (3, '100～999人'), (4, '1000人以上')], null=True, verbose_name='従業員数')),
                ('business_description', models.CharField(blank=True, default='', max_length=255, verbose_name='事業内容')),
                ('industry', models.SmallIntegerField(blank=True, choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], null=True, verbose_name='業種')),
                ('revenue', models.IntegerField(blank=True, null=True, verbose_name='売上高(万円)')),
                ('mission', models.TextField(blank=True, default='', verbose_name='ミッション')),
                ('vision', models.TextField(blank=True, default='', verbose_name='ビジョン')),
                ('value', models.TextField(blank=True, default='', verbose_name='バリュー')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 会社概要',
                'verbose_name_plural': 'historical 会社概要',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompanyMedia',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 利用している採用媒体',
                'verbose_name_plural': 'historical 利用している採用媒体',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompanyStrength',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('strength', models.CharField(max_length=255, verbose_name='強み')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 企業の強み',
                'verbose_name_plural': 'historical 企業の強み',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompanyStrengthJP',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 企業の強み-求人票',
                'verbose_name_plural': 'historical 企業の強み-求人票',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompanyStrengthRA',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求める人物像-採用記事',
                'verbose_name_plural': 'historical 求める人物像-採用記事',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdealCandidate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('name', models.CharField(max_length=255, verbose_name='人物像名')),
                ('age_min', models.SmallIntegerField(blank=True, null=True, verbose_name='年齢（下限）')),
                ('age_max', models.SmallIntegerField(blank=True, null=True, verbose_name='年齢（上限）')),
                ('education', models.SmallIntegerField(blank=True, choices=[(1, '大学院（博士）卒'), (2, '大学院（修士）卒'), (3, '大学卒'), (4, '高専・専門・短大卒'), (5, '高校卒')], null=True, verbose_name='学歴')),
                ('preferred_industry', models.IntegerField(blank=True, choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], null=True, verbose_name='希望業種')),
                ('preferred_occupation', models.SmallIntegerField(blank=True, choices=[(1, '経営'), (2, '管理'), (3, 'マーケティング'), (4, '営業'), (5, 'コンサルタント'), (6, 'ITコンサルタント'), (7, '専門職'), (8, 'IT技術職'), (9, 'ゲーム'), (10, '電気・電子'), (11, '半導体'), (12, '機械'), (13, '化学'), (14, '金融'), (15, '研究・臨床開発・治験'), (16, '建築・土木'), (17, '人事'), (18, 'サービス'), (19, 'プロジェクト管理'), (20, 'Webサービス・制作'), (21, 'デジタルマーケティング'), (22, '広告'), (23, '新聞・出版'), (24, 'テレビ・放送・映像・音響'), (25, 'デザイン'), (26, '素材'), (27, '食品'), (28, '化粧品'), (29, '日用品'), (30, '不動産'), (31, '施工管理'), (32, '医療営業'), (33, '生産管理・品質管理・品質保証'), (34, '学術・PMS・薬事'), (35, '医療・看護・薬剤'), (99, '不明')], null=True, verbose_name='希望職種')),
                ('current_position', models.SmallIntegerField(blank=True, choices=[(1, '経営者'), (2, '役員'), (3, '部長'), (4, '課長'), (5, '主任/係長'), (6, '一般社員')], null=True, verbose_name='現在の役職')),
                ('current_annual_income', models.IntegerField(blank=True, null=True, verbose_name='直近の年収（万円）')),
                ('current_income_range_type', models.SmallIntegerField(blank=True, choices=[(1, '以上'), (2, '未満')], null=True, verbose_name='年収の範囲タイプ')),
                ('desired_annual_income', models.IntegerField(blank=True, null=True, verbose_name='希望年収（万円）')),
                ('desired_income_range_type', models.SmallIntegerField(blank=True, choices=[(1, '以上'), (2, '未満')], null=True, verbose_name='希望年収の範囲タイプ')),
                ('employment_status', models.SmallIntegerField(blank=True, choices=[(1, '現職'), (2, '離職3ヶ月以内'), (3, '離職半年以内'), (4, '離職1年以内')], null=True, verbose_name='就業状況')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求める人物像',
                'verbose_name_plural': 'historical 求める人物像',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdealCandidateJP',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求める人物像-求人票',
                'verbose_name_plural': 'historical 求める人物像-求人票',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdealCandidateRA',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求める人物像-採用記事',
                'verbose_name_plural': 'historical 求める人物像-採用記事',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdealCandidateRequirement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('requirement_category', models.SmallIntegerField(choices=[(1, 'スキル'), (2, '経験'), (3, '資格'), (4, '希望勤務地'), (99, 'その他')], verbose_name='要件カテゴリ')),
                ('recruitment', models.CharField(max_length=255, verbose_name='要件')),
                ('requirement_level', models.SmallIntegerField(choices=[(1, '必須'), (2, '任意'), (3, 'いずれか必須')], verbose_name='要件レベル')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求める人物像要件',
                'verbose_name_plural': 'historical 求める人物像要件',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJobPosting',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='タイトル')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('summary', models.TextField(blank=True, default='', verbose_name='要約')),
                ('analysis_status', models.SmallIntegerField(blank=True, choices=[(1, '登録中'), (2, '成功'), (3, '失敗')], default=1, verbose_name='解析状況')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求人票',
                'verbose_name_plural': 'historical 求人票',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJobPostingAnalysisLog',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('is_reanalysis', models.BooleanField(default=False, verbose_name='再作成')),
                ('start_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], default=110, null=True, verbose_name='開始プロセス')),
                ('error_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], null=True, verbose_name='エラープロセス')),
                ('error_type', models.SmallIntegerField(blank=True, choices=[(1, 'HTML取得失敗エラー'), (2, '要素取得エラー'), (3, 'LLMによる解析エラー'), (99, 'システムエラー')], null=True, verbose_name='エラータイプ')),
                ('is_notified', models.BooleanField(default=False, verbose_name='通知済')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 求人票解析ログ',
                'verbose_name_plural': 'historical 求人票解析ログ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalKPI',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('year', models.SmallIntegerField(verbose_name='年')),
                ('month', models.SmallIntegerField(blank=True, null=True, verbose_name='月')),
                ('recruitment_total', models.IntegerField(blank=True, null=True, verbose_name='採用総数')),
                ('recruitment_dr', models.IntegerField(blank=True, null=True, verbose_name='DR採用数')),
                ('scout_send_counts', models.IntegerField(blank=True, null=True, verbose_name='スカウト送信数')),
                ('scout_reply_counts', models.IntegerField(blank=True, null=True, verbose_name='スカウト返信数')),
                ('scout_mtg_counts', models.IntegerField(blank=True, null=True, verbose_name='面談設定数')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical KPI',
                'verbose_name_plural': 'historical KPI',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLabel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('label', models.CharField(db_index=True, max_length=255, verbose_name='ラベル')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical ラベル',
                'verbose_name_plural': 'historical ラベル',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMailGenLog',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('is_notified', models.BooleanField(default=False, verbose_name='通知済')),
                ('start_process', models.SmallIntegerField(blank=True, choices=[(110, '候補者プロフィールの抽出'), (120, '候補者のキャリア情報の抽出'), (210, '候補者が企業の求める人物像に適合するか判定'), (310, '共感する感情を選択する'), (320, 'メール構成を選択する'), (330, '訴求する強みを選択する'), (340, '添付する求人情報を選択する'), (350, '添付する採用記事を選択する'), (360, '差出人を選択する'), (370, 'タイトルを生成する'), (380, '本文を生成する')], default=110, null=True, verbose_name='開始プロセス')),
                ('error_process', models.SmallIntegerField(blank=True, choices=[(110, '候補者プロフィールの抽出'), (120, '候補者のキャリア情報の抽出'), (210, '候補者が企業の求める人物像に適合するか判定'), (310, '共感する感情を選択する'), (320, 'メール構成を選択する'), (330, '訴求する強みを選択する'), (340, '添付する求人情報を選択する'), (350, '添付する採用記事を選択する'), (360, '差出人を選択する'), (370, 'タイトルを生成する'), (380, '本文を生成する')], null=True, verbose_name='エラープロセス')),
                ('error_type', models.SmallIntegerField(blank=True, choices=[(1, '情報不足エラー'), (2, 'マッチングエラー'), (3, '訴求ポイント不足エラー'), (99, 'システムエラー')], null=True, verbose_name='エラータイプ')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical メール作成ログ',
                'verbose_name_plural': 'historical メール作成ログ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMonthlyMailCount',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('year_month', models.DateField(verbose_name='年月')),
                ('count', models.IntegerField(default=0, verbose_name='作成数')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 月間メール作成数',
                'verbose_name_plural': 'historical 月間メール作成数',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRecruitmentArticle',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='タイトル')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('summary', models.TextField(blank=True, default='', verbose_name='要約')),
                ('analysis_status', models.SmallIntegerField(blank=True, choices=[(1, '登録中'), (2, '成功'), (3, '失敗')], default=1, verbose_name='解析状況')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 採用記事',
                'verbose_name_plural': 'historical 採用記事',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRecruitmentArticleAnalysisLog',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('is_reanalysis', models.BooleanField(default=False, verbose_name='再作成')),
                ('start_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], default=110, null=True, verbose_name='開始プロセス')),
                ('error_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], null=True, verbose_name='エラープロセス')),
                ('error_type', models.SmallIntegerField(blank=True, choices=[(1, 'HTML取得失敗エラー'), (2, '要素取得エラー'), (3, 'LLMによる解析エラー'), (99, 'システムエラー')], null=True, verbose_name='エラータイプ')),
                ('is_notified', models.BooleanField(default=False, verbose_name='通知済')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 採用記事解析ログ',
                'verbose_name_plural': 'historical 採用記事解析ログ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScout',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('matching_rate', models.FloatField(blank=True, null=True, verbose_name='マッチング率')),
                ('is_matched', models.BooleanField(blank=True, null=True, verbose_name='マッチング成立')),
                ('reason', models.TextField(blank=True, default='', max_length=1000, verbose_name='マッチング判定の理由')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('send_date', models.DateField(blank=True, null=True, verbose_name='送信日')),
                ('send_time', models.TimeField(blank=True, null=True, verbose_name='送信時間')),
                ('reply_date', models.DateField(blank=True, null=True, verbose_name='返信日')),
                ('reply_time', models.TimeField(blank=True, null=True, verbose_name='返信時間')),
                ('meeting_date', models.DateField(blank=True, null=True, verbose_name='面談日')),
                ('meeting_time', models.TimeField(blank=True, null=True, verbose_name='面談時間')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical スカウト',
                'verbose_name_plural': 'historical スカウト',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScoutMail',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('subject', models.CharField(default='', max_length=250, verbose_name='件名')),
                ('body', models.TextField(default='', verbose_name='本文')),
                ('empathy_emotion', models.SmallIntegerField(blank=True, choices=[(1, '転職に対する期待'), (2, '現職に対する不満'), (3, '転職に対する不安')], null=True, verbose_name='共感する感情')),
                ('mail_structure', models.SmallIntegerField(blank=True, choices=[(1, '期待向上型'), (2, '不満・不安解消型')], null=True, verbose_name='メール構成')),
                ('gen_status', models.SmallIntegerField(blank=True, choices=[(1, '作成中'), (2, '成功'), (3, '失敗')], null=True, verbose_name='作成状況')),
                ('is_checked', models.BooleanField(default=False, verbose_name='確認済み')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical スカウトメール',
                'verbose_name_plural': 'historical スカウトメール',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScoutSender',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('name', models.CharField(max_length=255, verbose_name='名前')),
                ('department', models.CharField(blank=True, default='', max_length=255, verbose_name='部署')),
                ('position', models.CharField(blank=True, default='', max_length=255, verbose_name='役職')),
                ('gender', models.SmallIntegerField(choices=[(1, '男性'), (2, '女性'), (99, '未選択')], default=99, verbose_name='性別')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical スカウト送信者',
                'verbose_name_plural': 'historical スカウト送信者',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkValue',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新日時')),
                ('work_value', models.CharField(db_index=True, max_length=255, verbose_name='仕事観')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='無効')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 仕事観',
                'verbose_name_plural': 'historical 仕事観',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='IdealCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('name', models.CharField(max_length=255, verbose_name='人物像名')),
                ('age_min', models.SmallIntegerField(blank=True, null=True, verbose_name='年齢（下限）')),
                ('age_max', models.SmallIntegerField(blank=True, null=True, verbose_name='年齢（上限）')),
                ('education', models.SmallIntegerField(blank=True, choices=[(1, '大学院（博士）卒'), (2, '大学院（修士）卒'), (3, '大学卒'), (4, '高専・専門・短大卒'), (5, '高校卒')], null=True, verbose_name='学歴')),
                ('preferred_industry', models.IntegerField(blank=True, choices=[(1, 'IT・インターネット'), (2, 'メーカー'), (3, '商社'), (4, '流通・小売'), (5, 'コンサルティング'), (6, 'マスコミ・メディア'), (7, 'エンターテインメント'), (8, '金融'), (9, '建設'), (10, 'メディカル'), (11, 'エネルギー'), (12, '保険'), (13, '不動産'), (14, '士業'), (15, 'サービス'), (16, '運輸・交通'), (17, '物流・倉庫'), (99, 'その他（教育・官公庁）など')], null=True, verbose_name='希望業種')),
                ('preferred_occupation', models.SmallIntegerField(blank=True, choices=[(1, '経営'), (2, '管理'), (3, 'マーケティング'), (4, '営業'), (5, 'コンサルタント'), (6, 'ITコンサルタント'), (7, '専門職'), (8, 'IT技術職'), (9, 'ゲーム'), (10, '電気・電子'), (11, '半導体'), (12, '機械'), (13, '化学'), (14, '金融'), (15, '研究・臨床開発・治験'), (16, '建築・土木'), (17, '人事'), (18, 'サービス'), (19, 'プロジェクト管理'), (20, 'Webサービス・制作'), (21, 'デジタルマーケティング'), (22, '広告'), (23, '新聞・出版'), (24, 'テレビ・放送・映像・音響'), (25, 'デザイン'), (26, '素材'), (27, '食品'), (28, '化粧品'), (29, '日用品'), (30, '不動産'), (31, '施工管理'), (32, '医療営業'), (33, '生産管理・品質管理・品質保証'), (34, '学術・PMS・薬事'), (35, '医療・看護・薬剤'), (99, '不明')], null=True, verbose_name='希望職種')),
                ('current_position', models.SmallIntegerField(blank=True, choices=[(1, '経営者'), (2, '役員'), (3, '部長'), (4, '課長'), (5, '主任/係長'), (6, '一般社員')], null=True, verbose_name='現在の役職')),
                ('current_annual_income', models.IntegerField(blank=True, null=True, verbose_name='直近の年収（万円）')),
                ('current_income_range_type', models.SmallIntegerField(blank=True, choices=[(1, '以上'), (2, '未満')], null=True, verbose_name='年収の範囲タイプ')),
                ('desired_annual_income', models.IntegerField(blank=True, null=True, verbose_name='希望年収（万円）')),
                ('desired_income_range_type', models.SmallIntegerField(blank=True, choices=[(1, '以上'), (2, '未満')], null=True, verbose_name='希望年収の範囲タイプ')),
                ('employment_status', models.SmallIntegerField(blank=True, choices=[(1, '現職'), (2, '離職3ヶ月以内'), (3, '離職半年以内'), (4, '離職1年以内')], null=True, verbose_name='就業状況')),
            ],
            options={
                'verbose_name': '求める人物像',
                'verbose_name_plural': '求める人物像',
                'db_table': 'ideal_candidates',
            },
        ),
        migrations.CreateModel(
            name='IdealCandidateJP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
            options={
                'verbose_name': '求める人物像-求人票',
                'verbose_name_plural': '求める人物像-求人票',
                'db_table': 'ideal_candidate_jps',
            },
        ),
        migrations.CreateModel(
            name='IdealCandidateRA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
            options={
                'verbose_name': '求める人物像-採用記事',
                'verbose_name_plural': '求める人物像-採用記事',
                'db_table': 'ideal_candidate_ras',
            },
        ),
        migrations.CreateModel(
            name='IdealCandidateRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('requirement_category', models.SmallIntegerField(choices=[(1, 'スキル'), (2, '経験'), (3, '資格'), (4, '希望勤務地'), (99, 'その他')], verbose_name='要件カテゴリ')),
                ('recruitment', models.CharField(max_length=255, verbose_name='要件')),
                ('requirement_level', models.SmallIntegerField(choices=[(1, '必須'), (2, '任意'), (3, 'いずれか必須')], verbose_name='要件レベル')),
            ],
            options={
                'verbose_name': '求める人物像要件',
                'verbose_name_plural': '求める人物像要件',
                'db_table': 'ideal_candidate_requirements',
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='タイトル')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('summary', models.TextField(blank=True, default='', verbose_name='要約')),
                ('analysis_status', models.SmallIntegerField(blank=True, choices=[(1, '登録中'), (2, '成功'), (3, '失敗')], default=1, verbose_name='解析状況')),
            ],
            options={
                'verbose_name': '求人票',
                'verbose_name_plural': '求人票',
                'db_table': 'job_postings',
            },
        ),
        migrations.CreateModel(
            name='JobPostingAnalysisLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('is_reanalysis', models.BooleanField(default=False, verbose_name='再作成')),
                ('start_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], default=110, null=True, verbose_name='開始プロセス')),
                ('error_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], null=True, verbose_name='エラープロセス')),
                ('error_type', models.SmallIntegerField(blank=True, choices=[(1, 'HTML取得失敗エラー'), (2, '要素取得エラー'), (3, 'LLMによる解析エラー'), (99, 'システムエラー')], null=True, verbose_name='エラータイプ')),
                ('is_notified', models.BooleanField(default=False, verbose_name='通知済')),
            ],
            options={
                'verbose_name': '求人票解析ログ',
                'verbose_name_plural': '求人票解析ログ',
                'db_table': 'job_posting_analysis_logs',
            },
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('year', models.SmallIntegerField(verbose_name='年')),
                ('month', models.SmallIntegerField(blank=True, null=True, verbose_name='月')),
                ('recruitment_total', models.IntegerField(blank=True, null=True, verbose_name='採用総数')),
                ('recruitment_dr', models.IntegerField(blank=True, null=True, verbose_name='DR採用数')),
                ('scout_send_counts', models.IntegerField(blank=True, null=True, verbose_name='スカウト送信数')),
                ('scout_reply_counts', models.IntegerField(blank=True, null=True, verbose_name='スカウト返信数')),
                ('scout_mtg_counts', models.IntegerField(blank=True, null=True, verbose_name='面談設定数')),
            ],
            options={
                'verbose_name': 'KPI',
                'verbose_name_plural': 'KPI',
                'db_table': 'kpis',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('label', models.CharField(max_length=255, unique=True, verbose_name='ラベル')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
            ],
            options={
                'verbose_name': 'ラベル',
                'verbose_name_plural': 'ラベル',
                'db_table': 'labels',
            },
        ),
        migrations.CreateModel(
            name='MailGenLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('is_notified', models.BooleanField(default=False, verbose_name='通知済')),
                ('start_process', models.SmallIntegerField(blank=True, choices=[(110, '候補者プロフィールの抽出'), (120, '候補者のキャリア情報の抽出'), (210, '候補者が企業の求める人物像に適合するか判定'), (310, '共感する感情を選択する'), (320, 'メール構成を選択する'), (330, '訴求する強みを選択する'), (340, '添付する求人情報を選択する'), (350, '添付する採用記事を選択する'), (360, '差出人を選択する'), (370, 'タイトルを生成する'), (380, '本文を生成する')], default=110, null=True, verbose_name='開始プロセス')),
                ('error_process', models.SmallIntegerField(blank=True, choices=[(110, '候補者プロフィールの抽出'), (120, '候補者のキャリア情報の抽出'), (210, '候補者が企業の求める人物像に適合するか判定'), (310, '共感する感情を選択する'), (320, 'メール構成を選択する'), (330, '訴求する強みを選択する'), (340, '添付する求人情報を選択する'), (350, '添付する採用記事を選択する'), (360, '差出人を選択する'), (370, 'タイトルを生成する'), (380, '本文を生成する')], null=True, verbose_name='エラープロセス')),
                ('error_type', models.SmallIntegerField(blank=True, choices=[(1, '情報不足エラー'), (2, 'マッチングエラー'), (3, '訴求ポイント不足エラー'), (99, 'システムエラー')], null=True, verbose_name='エラータイプ')),
            ],
            options={
                'verbose_name': 'メール作成ログ',
                'verbose_name_plural': 'メール作成ログ',
                'db_table': 'mail_gen_logs',
            },
        ),
        migrations.CreateModel(
            name='MonthlyMailCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('year_month', models.DateField(verbose_name='年月')),
                ('count', models.IntegerField(default=0, verbose_name='作成数')),
            ],
            options={
                'verbose_name': '月間メール作成数',
                'verbose_name_plural': '月間メール作成数',
                'db_table': 'monthly_mail_counts',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='タイトル')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('summary', models.TextField(blank=True, default='', verbose_name='要約')),
                ('analysis_status', models.SmallIntegerField(blank=True, choices=[(1, '登録中'), (2, '成功'), (3, '失敗')], default=1, verbose_name='解析状況')),
            ],
            options={
                'verbose_name': '採用記事',
                'verbose_name_plural': '採用記事',
                'db_table': 'recruitment_articles',
            },
        ),
        migrations.CreateModel(
            name='Scout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('matching_rate', models.FloatField(blank=True, null=True, verbose_name='マッチング率')),
                ('is_matched', models.BooleanField(blank=True, null=True, verbose_name='マッチング成立')),
                ('reason', models.TextField(blank=True, default='', max_length=1000, verbose_name='マッチング判定の理由')),
                ('media', models.SmallIntegerField(choices=[(1, 'BIZREACH'), (2, 'dodaダイレクト'), (3, 'Green'), (4, 'Wantedly'), (5, 'リクルート ダイレクトスカウト'), (6, 'マイナビ転職'), (7, 'エン転職ダイレクト'), (8, 'AMBI'), (9, 'Linkedin'), (10, 'paiza'), (11, 'OpenWork'), (98, '自社メディア'), (99, 'その他')], verbose_name='採用媒体')),
                ('send_date', models.DateField(blank=True, null=True, verbose_name='送信日')),
                ('send_time', models.TimeField(blank=True, null=True, verbose_name='送信時間')),
                ('reply_date', models.DateField(blank=True, null=True, verbose_name='返信日')),
                ('reply_time', models.TimeField(blank=True, null=True, verbose_name='返信時間')),
                ('meeting_date', models.DateField(blank=True, null=True, verbose_name='面談日')),
                ('meeting_time', models.TimeField(blank=True, null=True, verbose_name='面談時間')),
                ('candidate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.candidate', verbose_name='候補者')),
                ('ideal_candidate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.idealcandidate', verbose_name='求める人物像')),
            ],
            options={
                'verbose_name': 'スカウト',
                'verbose_name_plural': 'スカウト',
                'db_table': 'scouts',
            },
        ),
        migrations.CreateModel(
            name='WorkValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('work_value', models.CharField(max_length=255, unique=True, verbose_name='仕事観')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='無効')),
            ],
            options={
                'verbose_name': '仕事観',
                'verbose_name_plural': '仕事観',
                'db_table': 'work_values',
            },
        ),
        migrations.CreateModel(
            name='ScoutSender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('name', models.CharField(max_length=255, verbose_name='名前')),
                ('department', models.CharField(blank=True, default='', max_length=255, verbose_name='部署')),
                ('position', models.CharField(blank=True, default='', max_length=255, verbose_name='役職')),
                ('gender', models.SmallIntegerField(choices=[(1, '男性'), (2, '女性'), (99, '未選択')], default=99, verbose_name='性別')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.company', verbose_name='企業')),
            ],
            options={
                'verbose_name': 'スカウト送信者',
                'verbose_name_plural': 'スカウト送信者',
                'db_table': 'scout_senders',
            },
        ),
        migrations.CreateModel(
            name='ScoutMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('subject', models.CharField(default='', max_length=250, verbose_name='件名')),
                ('body', models.TextField(default='', verbose_name='本文')),
                ('empathy_emotion', models.SmallIntegerField(blank=True, choices=[(1, '転職に対する期待'), (2, '現職に対する不満'), (3, '転職に対する不安')], null=True, verbose_name='共感する感情')),
                ('mail_structure', models.SmallIntegerField(blank=True, choices=[(1, '期待向上型'), (2, '不満・不安解消型')], null=True, verbose_name='メール構成')),
                ('gen_status', models.SmallIntegerField(blank=True, choices=[(1, '作成中'), (2, '成功'), (3, '失敗')], null=True, verbose_name='作成状況')),
                ('is_checked', models.BooleanField(default=False, verbose_name='確認済み')),
                ('job_posting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.jobposting', verbose_name='求人票')),
                ('recruitment_article_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recruitment_article_1', to='base.recruitmentarticle', verbose_name='採用記事1')),
                ('recruitment_article_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recruitment_article_2', to='base.recruitmentarticle', verbose_name='採用記事2')),
                ('recruitment_article_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.recruitmentarticle', verbose_name='採用記事3')),
                ('scout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.scout', verbose_name='スカウト')),
                ('scout_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.scoutsender', verbose_name='スカウト送信者')),
                ('strength_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strength_1', to='base.companystrength', verbose_name='強み1')),
                ('strength_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strength_2', to='base.companystrength', verbose_name='強み2')),
                ('strength_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strength_3', to='base.companystrength', verbose_name='強み3')),
            ],
            options={
                'verbose_name': 'スカウトメール',
                'verbose_name_plural': 'スカウトメール',
                'db_table': 'scout_mails',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentArticleAnalysisLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('is_reanalysis', models.BooleanField(default=False, verbose_name='再作成')),
                ('start_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], default=110, null=True, verbose_name='開始プロセス')),
                ('error_process', models.SmallIntegerField(blank=True, choices=[(110, 'HTMLの取得'), (120, 'HTML要素の取得'), (210, '求める人物像を選択する'), (220, '関連のある企業の強みを選択する'), (310, '成功ログを記録する'), (320, '失敗ログを記録する')], null=True, verbose_name='エラープロセス')),
                ('error_type', models.SmallIntegerField(blank=True, choices=[(1, 'HTML取得失敗エラー'), (2, '要素取得エラー'), (3, 'LLMによる解析エラー'), (99, 'システムエラー')], null=True, verbose_name='エラータイプ')),
                ('is_notified', models.BooleanField(default=False, verbose_name='通知済')),
                ('recruitment_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.recruitmentarticle', verbose_name='採用記事')),
            ],
            options={
                'verbose_name': '採用記事解析ログ',
                'verbose_name_plural': '採用記事解析ログ',
                'db_table': 'recruitment_article_analysis_logs',
            },
        ),
    ]
